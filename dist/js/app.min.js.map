{"version":3,"sources":["app.js"],"names":["getEnv","window","location","hostname","app","angular","module","config","$cookiesProvider","defaults","path","$","QueryString","a","b","i","length","p","split","decodeURIComponent","replace","search","substr","jQuery","factory","AppConfig","this","defaultRecipientAddress","dotPayUrlBase","prototype","init","env","urlBase","socketServerUrl","console","log","WalletModel","user","wallets","selectedWallet","selectedAccount","sAccount","account","accounts","key","m","c","persist","put","$cookieStore","$scope","appConfig","walletModel","model","get","open","wallet","save","update","payload","slice","j","keyStr","encode","input","chr1","chr2","enc1","enc2","enc3","output","chr3","enc4","charCodeAt","isNaN","charAt","decode","base64test","exec","indexOf","String","fromCharCode"],"mappings":"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","file":"app.min.js","sourcesContent":["/*jshint browser: true */\r\n\r\nvar app = angular.module(\"app\", ['ngCookies']);\r\n\r\napp.config(function($cookiesProvider) {\r\n    $cookiesProvider.defaults.path = '/';\r\n});\r\n\r\n/* globals jQuery */\r\n(function($) {\r\n    $.QueryString = (function(a) {\r\n        if (a === \"\") return {};\r\n        var b = {};\r\n        for (var i = 0; i < a.length; ++i)\r\n        {\r\n            var p=a[i].split('=');\r\n            if (p.length != 2) continue;\r\n            b[p[0]] = decodeURIComponent(p[1].replace(/\\+/g, \" \"));\r\n        }\r\n        return b;\r\n    })(window.location.search.substr(1).split('&'));\r\n})(jQuery);\r\n\r\nfunction getEnv() {\r\n    return window.location.hostname == 'localhost' ? 'dev' : 'prod';\r\n}\r\n\r\napp.factory('appConfig', function () {\r\n    var AppConfig = function () {\r\n        this.defaultRecipientAddress = '1KxRfiqcNi2GbpdN3pzuQHgewShmeNW9g1';\r\n        this.dotPayUrlBase = 'https://ssl.dotpay.pl/t2/?id=447185';\r\n    };\r\n    AppConfig.prototype.init = function (env) {\r\n        this.env = env;\r\n        this.urlBase = (env == 'prod') ? 'https://api.bushidowallet.com/walletapi' : 'http://localhost:8080/walletapi';\r\n        this.socketServerUrl = (env == 'prod') ? 'https://websockets.bushidowallet.com/stomp' : 'http://localhost:15674/stomp';\r\n        console.log('Initialized AppConfig for environment ' + env);\r\n        return this;\r\n    };\r\n    return new AppConfig();\r\n});\r\n\r\napp.factory('walletModel', function () {\r\n    var WalletModel = function() {\r\n    };\r\n    WalletModel.prototype.init = function (user, wallets, selectedWallet, selectedAccount) {\r\n        this.user = user;\r\n        this.wallets = wallets;\r\n        this.selectedWallet = (!!selectedWallet) ? selectedWallet : wallets[0];\r\n        var a = (!!selectedAccount) ? selectedAccount.account : this.selectedWallet.accounts[0].account;\r\n        var sAccount;\r\n        for (var i = 0; i < this.selectedWallet.accounts.length; i++) {\r\n            if (this.selectedWallet.accounts[i].account == a) {\r\n                sAccount = this.selectedWallet.accounts[i];\r\n            }\r\n        }\r\n        if (!!sAccount) {\r\n            this.selectedAccount = sAccount;\r\n        } else {\r\n            console.log('Unable to find account ' + a + ' on wallet ' + this.selectedWallet.key);\r\n        }\r\n        return this;\r\n    };\r\n    return new WalletModel();\r\n});\r\n\r\napp.factory('walletManager', function() {\r\n    var m;\r\n    var c;\r\n    var persist = function() {\r\n        c.put('user', m.user);\r\n        c.put('wallets', m.wallets);\r\n        c.put('selectedWallet', m.selectedWallet);\r\n        c.put('selectedAccount', m.selectedAccount);\r\n    };\r\n    return {\r\n        init: function ($cookieStore, $scope, appConfig, walletModel) {\r\n            var model = walletModel.init($cookieStore.get('user'), $cookieStore.get('wallets'), $cookieStore.get('selectedWallet'), $cookieStore.get('selectedAccount'));\r\n            var config = appConfig.init(getEnv());\r\n            $scope.model = model;\r\n            $scope.config = config;\r\n            m = model;\r\n            c = $cookieStore;\r\n            persist();\r\n        },\r\n        open: function (wallet) {\r\n            m.selectedWallet = wallet;\r\n            m.selectedAccount = wallet.accounts[0];\r\n            persist();\r\n        },\r\n        save: function () {\r\n            persist();\r\n        },\r\n        update: function (payload) {\r\n            for (var i = 0; i < m.wallets.length; i++) {\r\n                if (m.wallets[i].key == payload.key) {\r\n                    m.wallets.slice(i, 1, payload);\r\n                }\r\n            }\r\n            if (m.selectedWallet.key == payload.key) {\r\n                m.selectedWallet = payload;\r\n            }\r\n            for (var j = 0; j < payload.accounts.length; j++) {\r\n                if (m.selectedAccount.account == payload.accounts[j].account) {\r\n                    m.selectedAccount = payload.accounts[j];\r\n                }\r\n            }\r\n            persist();\r\n        }\r\n    };\r\n});\r\n\r\napp.factory('Base64', function() {\r\n    var keyStr = 'ABCDEFGHIJKLMNOP' +\r\n        'QRSTUVWXYZabcdef' +\r\n        'ghijklmnopqrstuv' +\r\n        'wxyz0123456789+/' +\r\n        '=';\r\n    return {\r\n        encode: function (input) {\r\n            var output = \"\";\r\n            var chr1, chr2, chr3 = \"\";\r\n            var enc1, enc2, enc3, enc4 = \"\";\r\n            var i = 0;\r\n            do {\r\n                chr1 = input.charCodeAt(i++);\r\n                chr2 = input.charCodeAt(i++);\r\n                chr3 = input.charCodeAt(i++);\r\n                enc1 = chr1 >> 2;\r\n                enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\r\n                enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\r\n                enc4 = chr3 & 63;\r\n                if (isNaN(chr2)) {\r\n                    enc3 = enc4 = 64;\r\n                } else if (isNaN(chr3)) {\r\n                    enc4 = 64;\r\n                }\r\n                output = output +\r\n                keyStr.charAt(enc1) +\r\n                keyStr.charAt(enc2) +\r\n                keyStr.charAt(enc3) +\r\n                keyStr.charAt(enc4);\r\n                chr1 = chr2 = chr3 = \"\";\r\n                enc1 = enc2 = enc3 = enc4 = \"\";\r\n            } while (i < input.length);\r\n\r\n            return output;\r\n        },\r\n        decode: function (input) {\r\n            var output = \"\";\r\n            var chr1, chr2, chr3 = \"\";\r\n            var enc1, enc2, enc3, enc4 = \"\";\r\n            var i = 0;\r\n            var base64test = /[^A-Za-z0-9\\+\\/\\=]/g;\r\n            if (base64test.exec(input)) {\r\n                console.log(\"There were invalid base64 characters in the input text.\\n\" +\r\n                \"Valid base64 characters are A-Z, a-z, 0-9, '+', '/',and '='\\n\" +\r\n                \"Expect errors in decoding.\");\r\n            }\r\n            input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\r\n            do {\r\n                enc1 = keyStr.indexOf(input.charAt(i++));\r\n                enc2 = keyStr.indexOf(input.charAt(i++));\r\n                enc3 = keyStr.indexOf(input.charAt(i++));\r\n                enc4 = keyStr.indexOf(input.charAt(i++));\r\n                chr1 = (enc1 << 2) | (enc2 >> 4);\r\n                chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\r\n                chr3 = ((enc3 & 3) << 6) | enc4;\r\n                output = output + String.fromCharCode(chr1);\r\n                if (enc3 != 64) {\r\n                    output = output + String.fromCharCode(chr2);\r\n                }\r\n                if (enc4 != 64) {\r\n                    output = output + String.fromCharCode(chr3);\r\n                }\r\n                chr1 = chr2 = chr3 = \"\";\r\n                enc1 = enc2 = enc3 = enc4 = \"\";\r\n\r\n            } while (i < input.length);\r\n            return output;\r\n        }\r\n    };\r\n});"],"sourceRoot":"/source/"}