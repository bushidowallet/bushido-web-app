{"version":3,"sources":["app.js"],"names":["getEnv","app","angular","module","config","$cookiesProvider","defaults","path","$","QueryString","a","b","i","length","p","split","decodeURIComponent","replace","window","location","search","substr","jQuery","factory","AppConfig","this","defaultRecipientAddress","dotPayUrlBase","prototype","init","env","urlBase","socketServerUrl","console","log","WalletModel","user","wallets","selectedWallet","selectedAccount","sAccount","account","accounts","key","m","c","persist","put","$cookieStore","$scope","appConfig","walletModel","model","get","open","wallet","save","update","payload","slice","j","keyStr","encode","input","chr1","chr2","enc1","enc2","enc3","output","chr3","enc4","charCodeAt","isNaN","charAt","decode","base64test","exec","indexOf","String","fromCharCode"],"mappings":"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","file":"app.min.js","sourcesContent":["/*jshint browser: true */\r\n\r\nvar app = angular.module(\"app\", ['ngCookies']);\r\n\r\napp.config(function($cookiesProvider) {\r\n    $cookiesProvider.defaults.path = '/';\r\n});\r\n\r\n/* globals jQuery */\r\n(function($) {\r\n    $.QueryString = (function(a) {\r\n        if (a === \"\") return {};\r\n        var b = {};\r\n        for (var i = 0; i < a.length; ++i)\r\n        {\r\n            var p=a[i].split('=');\r\n            if (p.length != 2) continue;\r\n            b[p[0]] = decodeURIComponent(p[1].replace(/\\+/g, \" \"));\r\n        }\r\n        return b;\r\n    })(window.location.search.substr(1).split('&'));\r\n})(jQuery);\r\n\r\nfunction getEnv() {\r\n    //return window.location.hostname == 'localhost' ? 'dev' : 'prod';\r\n    return 'prod';\r\n}\r\n\r\napp.factory('appConfig', function () {\r\n    var AppConfig = function () {\r\n        this.defaultRecipientAddress = '1KxRfiqcNi2GbpdN3pzuQHgewShmeNW9g1';\r\n        this.dotPayUrlBase = 'https://ssl.dotpay.pl/t2/?id=447185';\r\n    };\r\n    AppConfig.prototype.init = function (env) {\r\n        this.env = env;\r\n        this.urlBase = (env == 'prod') ? 'https://api.bushidowallet.com/walletapi' : 'http://localhost:8080/walletapi';\r\n        this.socketServerUrl = (env == 'prod') ? 'https://websockets.bushidowallet.com/stomp' : 'http://localhost:15674/stomp';\r\n        console.log('Initialized AppConfig for environment ' + env);\r\n        return this;\r\n    };\r\n    return new AppConfig();\r\n});\r\n\r\napp.factory('walletModel', function () {\r\n    var WalletModel = function() {\r\n    };\r\n    WalletModel.prototype.init = function (user, wallets, selectedWallet, selectedAccount) {\r\n        this.user = user;\r\n        this.wallets = wallets;\r\n        this.selectedWallet = (!!selectedWallet) ? selectedWallet : wallets[0];\r\n        var a = (!!selectedAccount) ? selectedAccount.account : this.selectedWallet.accounts[0].account;\r\n        var sAccount;\r\n        for (var i = 0; i < this.selectedWallet.accounts.length; i++) {\r\n            if (this.selectedWallet.accounts[i].account == a) {\r\n                sAccount = this.selectedWallet.accounts[i];\r\n            }\r\n        }\r\n        if (!!sAccount) {\r\n            this.selectedAccount = sAccount;\r\n        } else {\r\n            console.log('Unable to find account ' + a + ' on wallet ' + this.selectedWallet.key);\r\n        }\r\n        return this;\r\n    };\r\n    return new WalletModel();\r\n});\r\n\r\napp.factory('walletManager', function() {\r\n    var m;\r\n    var c;\r\n    var persist = function() {\r\n        c.put('user', m.user);\r\n        c.put('wallets', m.wallets);\r\n        c.put('selectedWallet', m.selectedWallet);\r\n        c.put('selectedAccount', m.selectedAccount);\r\n    };\r\n    return {\r\n        init: function ($cookieStore, $scope, appConfig, walletModel) {\r\n            var model = walletModel.init($cookieStore.get('user'), $cookieStore.get('wallets'), $cookieStore.get('selectedWallet'), $cookieStore.get('selectedAccount'));\r\n            var config = appConfig.init(getEnv());\r\n            $scope.model = model;\r\n            $scope.config = config;\r\n            m = model;\r\n            c = $cookieStore;\r\n            persist();\r\n        },\r\n        open: function (wallet) {\r\n            m.selectedWallet = wallet;\r\n            m.selectedAccount = wallet.accounts[0];\r\n            persist();\r\n        },\r\n        save: function () {\r\n            persist();\r\n        },\r\n        update: function (payload) {\r\n            for (var i = 0; i < m.wallets.length; i++) {\r\n                if (m.wallets[i].key == payload.key) {\r\n                    m.wallets.slice(i, 1, payload);\r\n                }\r\n            }\r\n            if (m.selectedWallet.key == payload.key) {\r\n                m.selectedWallet = payload;\r\n            }\r\n            for (var j = 0; j < payload.accounts.length; j++) {\r\n                if (m.selectedAccount.account == payload.accounts[j].account) {\r\n                    m.selectedAccount = payload.accounts[j];\r\n                }\r\n            }\r\n            persist();\r\n        }\r\n    };\r\n});\r\n\r\napp.factory('Base64', function() {\r\n    var keyStr = 'ABCDEFGHIJKLMNOP' +\r\n        'QRSTUVWXYZabcdef' +\r\n        'ghijklmnopqrstuv' +\r\n        'wxyz0123456789+/' +\r\n        '=';\r\n    return {\r\n        encode: function (input) {\r\n            var output = \"\";\r\n            var chr1, chr2, chr3 = \"\";\r\n            var enc1, enc2, enc3, enc4 = \"\";\r\n            var i = 0;\r\n            do {\r\n                chr1 = input.charCodeAt(i++);\r\n                chr2 = input.charCodeAt(i++);\r\n                chr3 = input.charCodeAt(i++);\r\n                enc1 = chr1 >> 2;\r\n                enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\r\n                enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\r\n                enc4 = chr3 & 63;\r\n                if (isNaN(chr2)) {\r\n                    enc3 = enc4 = 64;\r\n                } else if (isNaN(chr3)) {\r\n                    enc4 = 64;\r\n                }\r\n                output = output +\r\n                keyStr.charAt(enc1) +\r\n                keyStr.charAt(enc2) +\r\n                keyStr.charAt(enc3) +\r\n                keyStr.charAt(enc4);\r\n                chr1 = chr2 = chr3 = \"\";\r\n                enc1 = enc2 = enc3 = enc4 = \"\";\r\n            } while (i < input.length);\r\n\r\n            return output;\r\n        },\r\n        decode: function (input) {\r\n            var output = \"\";\r\n            var chr1, chr2, chr3 = \"\";\r\n            var enc1, enc2, enc3, enc4 = \"\";\r\n            var i = 0;\r\n            var base64test = /[^A-Za-z0-9\\+\\/\\=]/g;\r\n            if (base64test.exec(input)) {\r\n                console.log(\"There were invalid base64 characters in the input text.\\n\" +\r\n                \"Valid base64 characters are A-Z, a-z, 0-9, '+', '/',and '='\\n\" +\r\n                \"Expect errors in decoding.\");\r\n            }\r\n            input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\r\n            do {\r\n                enc1 = keyStr.indexOf(input.charAt(i++));\r\n                enc2 = keyStr.indexOf(input.charAt(i++));\r\n                enc3 = keyStr.indexOf(input.charAt(i++));\r\n                enc4 = keyStr.indexOf(input.charAt(i++));\r\n                chr1 = (enc1 << 2) | (enc2 >> 4);\r\n                chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\r\n                chr3 = ((enc3 & 3) << 6) | enc4;\r\n                output = output + String.fromCharCode(chr1);\r\n                if (enc3 != 64) {\r\n                    output = output + String.fromCharCode(chr2);\r\n                }\r\n                if (enc4 != 64) {\r\n                    output = output + String.fromCharCode(chr3);\r\n                }\r\n                chr1 = chr2 = chr3 = \"\";\r\n                enc1 = enc2 = enc3 = enc4 = \"\";\r\n\r\n            } while (i < input.length);\r\n            return output;\r\n        }\r\n    };\r\n});"],"sourceRoot":"/source/"}