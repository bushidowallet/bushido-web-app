var WalletApi;!function(){function invoke(client,username,password,command,payload,handler,observers,walletId,sendDestination,correlationId){correlationId||(correlationId=generateUUID()),handler&&observers.push(new MessageListener(correlationId,command,handler,"rpc")),console.log("Invoking "+command+" on wallet "+walletId+" with correlationId: "+correlationId+"..."),client.send(sendDestination,{"content-type":"application/json",__TypeId__:"com.bitcoin.blockchain.api.domain.message.ClientMessage"},JSON.stringify({correlationId:correlationId,username:username,password:password,key:walletId,command:command,payload:payload}))}function generateUUID(){var d=(new Date).getTime(),uuid="xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(c){var r=(d+16*Math.random())%16|0;return d=Math.floor(d/16),("x"==c?r:3&r|8).toString(16)});return uuid}WalletApi=function(serviceUrl,username,password,walletId,autoConnect,connectCommand,connectPayload,connectHandler,subscribeDestination,sendDestination,readyHandler){var ws=new SockJS(serviceUrl),client=Stomp.over(ws);client.heartbeat.incoming=0,client.heartbeat.outgoing=0;var observers=[];return this.client=client,this.serviceUser="bushido",this.servicePassword="bushido",this.username=username,this.password=password,this.walletId=walletId,this.sendDestination=sendDestination,this.observers=observers,this.on_connect=function(){readyHandler&&readyHandler.call(this),client.subscribe(subscribeDestination+walletId),connectCommand&&invoke(client,username,password,connectCommand,connectPayload,connectHandler,observers,walletId,sendDestination)},this.on_error=function(){console.log("error")},client.onreceive=function(m){var payload=JSON.parse(m.body),index=-1;if(observers){for(var i=0;i<observers.length;i++)"notification"==observers[i].type?observers[i].command==payload.command&&observers[i].handler.call(this,payload):"rpc"==observers[i].type&&observers[i].correlationId==payload.correlationId&&(index=i,observers[i].handler.call(this,payload));index>-1&&observers.splice(index,1)}},autoConnect&&this.connect(),{connect:WalletApi.prototype.connect,invoke:WalletApi.prototype.invoke,addListener:WalletApi.prototype.addListener,removeListener:WalletApi.prototype.removeListener,observers:this.observers,client:this.client,serviceUser:this.serviceUser,servicePassword:this.servicePassword,on_connect:this.on_connect,on_error:this.on_error,username:this.username,password:this.password,walletId:this.walletId,sendDestination:this.sendDestination}},WalletApi.prototype.connect=function(){return this.client.connect(this.serviceUser,this.servicePassword,this.on_connect,this.on_error,"/"),this},WalletApi.prototype.invoke=function(command,payload,responseHandler,correlationId){return invoke(this.client,this.username,this.password,command,payload,responseHandler,this.observers,this.walletId,this.sendDestination,correlationId),this},WalletApi.prototype.addListener=function(command,handler){return this.observers.push(new MessageListener(null,command,handler,"notification")),this},WalletApi.prototype.removeListener=function(command,handler){for(var index=-1,i=0;i<this.observers.length;i++)this.observers[i].command==command&&this.observers[i].handler==handler&&"notification"==this.observers[i].type&&(index=i);return index>-1&&this.observers.splice(index,1),this}}();var MessageListener=function(correlationId,command,handler,type){this.correlationId=correlationId,this.command=command,this.handler=handler,this.type=type};