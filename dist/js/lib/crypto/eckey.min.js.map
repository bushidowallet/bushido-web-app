{"version":3,"sources":["lib/crypto/eckey.js"],"names":["ECKey","ecparams","getSECCurveByName","input","Util","isArray","this","priv","BigInteger","fromByteArrayUnsigned","prototype","setCompressed","v","compressed","getPubPoint","pub","getG","multiply"],"mappings":"AAEA,GAAIA,QAEJ,WAEE,GAAIC,UAAWC,kBAAkB,YAkBjC,OAhBAF,OAAQ,SAAUG,OACZC,KAAKC,QAAQF,SACfG,KAAKC,KAAOC,WAAWC,sBAAsBN,SAIjDH,MAAMU,UAAUC,cAAgB,SAAUC,GACxCN,KAAKO,aAAeD,GAGtBZ,MAAMU,UAAUI,YAAc,WAG5B,MAFKR,MAAKS,MAAKT,KAAKS,IAAMd,SAASe,OAAOC,SAASX,KAAKC,OAEjDD,KAAKS,KAGPf","file":"lib/crypto/eckey.min.js","sourcesContent":["/* jshint undef: false */\n\nvar ECKey;\n\n(function () {\n\n  var ecparams = getSECCurveByName(\"secp256k1\");\n\n  ECKey = function (input) {\n    if (Util.isArray(input)) {\n      this.priv = BigInteger.fromByteArrayUnsigned(input);\n    }\n  };\n\n  ECKey.prototype.setCompressed = function (v) {\n    this.compressed = !!v;\n  };\n\n  ECKey.prototype.getPubPoint = function () {\n    if (!this.pub) this.pub = ecparams.getG().multiply(this.priv);\n\n    return this.pub;\n  };\n\n  return ECKey;\n\n})();\n"],"sourceRoot":"/source/"}