{"version":3,"sources":["lib/crypto/jsbn/jsbn2.js"],"names":["bnClone","r","nbi","this","copyTo","bnIntValue","s","t","DV","DB","bnByteValue","bnShortValue","bnpChunkSize","Math","floor","LN2","log","bnSigNum","bnpToRadix","b","signum","cs","chunkSize","a","pow","d","nbv","y","z","divRemTo","intValue","toString","substr","bnpFromRadix","fromInt","mi","j","w","i","length","x","intAt","charAt","dMultiply","dAddOffset","BigInteger","ZERO","subTo","bnpFromNumber","c","fromNumber","testBit","bitwiseTo","ONE","shiftLeft","op_or","isEven","isProbablePrime","bitLength","Array","nextBytes","fromString","bnToByteArray","p","k","DM","bnEquals","compareTo","bnMin","bnMax","bnpBitwiseTo","op","f","m","min","clamp","op_and","bnAnd","bnOr","op_xor","bnXor","op_andnot","bnAndNot","bnNot","bnShiftLeft","n","rShiftTo","lShiftTo","bnShiftRight","lbit","bnGetLowestSetBit","cbit","bnBitCount","bnTestBit","bnpChangeBit","bnSetBit","changeBit","bnClearBit","bnFlipBit","bnpAddTo","bnAdd","addTo","bnSubtract","bnMultiply","multiplyTo","bnSquare","squareTo","bnDivide","bnRemainder","bnDivideAndRemainder","q","bnpDMultiply","am","bnpDAddOffset","NullExp","nNop","nMulTo","nSqrTo","bnPow","e","exp","bnpMultiplyLowerTo","bnpMultiplyUpperTo","max","drShiftTo","Barrett","r2","q3","dlShiftTo","mu","divide","barrettConvert","mod","reduce","barrettRevert","barrettReduce","multiplyUpperTo","multiplyLowerTo","barrettSqrTo","barrettMulTo","bnModPow","Classic","Montgomery","g","k1","km","convert","g2","sqrTo","mulTo","is1","nbits","revert","bnGCD","negate","clone","getLowestSetBit","bnpModInt","bnModInverse","ac","u","v","subtract","add","bnIsProbablePrime","abs","lowprimes","lplim","modInt","millerRabin","bnpMillerRabin","n1","shiftRight","random","modPow","modPowInt","prototype","toRadix","fromRadix","byteValue","shortValue","toByteArray","equals","and","or","xor","andNot","not","bitCount","setBit","clearBit","flipBit","multiply","remainder","divideAndRemainder","modInverse","gcd","square"],"mappings":"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","file":"lib/crypto/jsbn/jsbn2.min.js","sourcesContent":["// Copyright (c) 2005-2009  Tom Wu\n// All Rights Reserved.\n// See \"LICENSE\" for details.\n\n// Extended JavaScript BN functions, required for RSA private ops.\n\n// Version 1.1: new BigInteger(\"0\", 10) returns \"proper\" zero\n// Version 1.2: square() API, isProbablePrime fix\n\n// (public)\nfunction bnClone() { var r = nbi(); this.copyTo(r); return r; }\n\n// (public) return value as integer\nfunction bnIntValue() {\n  if(this.s < 0) {\n    if(this.t == 1) return this[0]-this.DV;\n    else if(this.t == 0) return -1;\n  }\n  else if(this.t == 1) return this[0];\n  else if(this.t == 0) return 0;\n  // assumes 16 < DB < 32\n  return ((this[1]&((1<<(32-this.DB))-1))<<this.DB)|this[0];\n}\n\n// (public) return value as byte\nfunction bnByteValue() { return (this.t==0)?this.s:(this[0]<<24)>>24; }\n\n// (public) return value as short (assumes DB>=16)\nfunction bnShortValue() { return (this.t==0)?this.s:(this[0]<<16)>>16; }\n\n// (protected) return x s.t. r^x < DV\nfunction bnpChunkSize(r) { return Math.floor(Math.LN2*this.DB/Math.log(r)); }\n\n// (public) 0 if this == 0, 1 if this > 0\nfunction bnSigNum() {\n  if(this.s < 0) return -1;\n  else if(this.t <= 0 || (this.t == 1 && this[0] <= 0)) return 0;\n  else return 1;\n}\n\n// (protected) convert to radix string\nfunction bnpToRadix(b) {\n  if(b == null) b = 10;\n  if(this.signum() == 0 || b < 2 || b > 36) return \"0\";\n  var cs = this.chunkSize(b);\n  var a = Math.pow(b,cs);\n  var d = nbv(a), y = nbi(), z = nbi(), r = \"\";\n  this.divRemTo(d,y,z);\n  while(y.signum() > 0) {\n    r = (a+z.intValue()).toString(b).substr(1) + r;\n    y.divRemTo(d,y,z);\n  }\n  return z.intValue().toString(b) + r;\n}\n\n// (protected) convert from radix string\nfunction bnpFromRadix(s,b) {\n  this.fromInt(0);\n  if(b == null) b = 10;\n  var cs = this.chunkSize(b);\n  var d = Math.pow(b,cs), mi = false, j = 0, w = 0;\n  for(var i = 0; i < s.length; ++i) {\n    var x = intAt(s,i);\n    if(x < 0) {\n      if(s.charAt(i) == \"-\" && this.signum() == 0) mi = true;\n      continue;\n    }\n    w = b*w+x;\n    if(++j >= cs) {\n      this.dMultiply(d);\n      this.dAddOffset(w,0);\n      j = 0;\n      w = 0;\n    }\n  }\n  if(j > 0) {\n    this.dMultiply(Math.pow(b,j));\n    this.dAddOffset(w,0);\n  }\n  if(mi) BigInteger.ZERO.subTo(this,this);\n}\n\n// (protected) alternate constructor\nfunction bnpFromNumber(a,b,c) {\n  if(\"number\" == typeof b) {\n    // new BigInteger(int,int,RNG)\n    if(a < 2) this.fromInt(1);\n    else {\n      this.fromNumber(a,c);\n      if(!this.testBit(a-1))\t// force MSB set\n        this.bitwiseTo(BigInteger.ONE.shiftLeft(a-1),op_or,this);\n      if(this.isEven()) this.dAddOffset(1,0); // force odd\n      while(!this.isProbablePrime(b)) {\n        this.dAddOffset(2,0);\n        if(this.bitLength() > a) this.subTo(BigInteger.ONE.shiftLeft(a-1),this);\n      }\n    }\n  }\n  else {\n    // new BigInteger(int,RNG)\n    var x = new Array(), t = a&7;\n    x.length = (a>>3)+1;\n    b.nextBytes(x);\n    if(t > 0) x[0] &= ((1<<t)-1); else x[0] = 0;\n    this.fromString(x,256);\n  }\n}\n\n// (public) convert to bigendian byte array\nfunction bnToByteArray() {\n  var i = this.t, r = new Array();\n  r[0] = this.s;\n  var p = this.DB-(i*this.DB)%8, d, k = 0;\n  if(i-- > 0) {\n    if(p < this.DB && (d = this[i]>>p) != (this.s&this.DM)>>p)\n      r[k++] = d|(this.s<<(this.DB-p));\n    while(i >= 0) {\n      if(p < 8) {\n        d = (this[i]&((1<<p)-1))<<(8-p);\n        d |= this[--i]>>(p+=this.DB-8);\n      }\n      else {\n        d = (this[i]>>(p-=8))&0xff;\n        if(p <= 0) { p += this.DB; --i; }\n      }\n      if((d&0x80) != 0) d |= -256;\n      if(k == 0 && (this.s&0x80) != (d&0x80)) ++k;\n      if(k > 0 || d != this.s) r[k++] = d;\n    }\n  }\n  return r;\n}\n\nfunction bnEquals(a) { return(this.compareTo(a)==0); }\nfunction bnMin(a) { return(this.compareTo(a)<0)?this:a; }\nfunction bnMax(a) { return(this.compareTo(a)>0)?this:a; }\n\n// (protected) r = this op a (bitwise)\nfunction bnpBitwiseTo(a,op,r) {\n  var i, f, m = Math.min(a.t,this.t);\n  for(i = 0; i < m; ++i) r[i] = op(this[i],a[i]);\n  if(a.t < this.t) {\n    f = a.s&this.DM;\n    for(i = m; i < this.t; ++i) r[i] = op(this[i],f);\n    r.t = this.t;\n  }\n  else {\n    f = this.s&this.DM;\n    for(i = m; i < a.t; ++i) r[i] = op(f,a[i]);\n    r.t = a.t;\n  }\n  r.s = op(this.s,a.s);\n  r.clamp();\n}\n\n// (public) this & a\nfunction op_and(x,y) { return x&y; }\nfunction bnAnd(a) { var r = nbi(); this.bitwiseTo(a,op_and,r); return r; }\n\n// (public) this | a\nfunction op_or(x,y) { return x|y; }\nfunction bnOr(a) { var r = nbi(); this.bitwiseTo(a,op_or,r); return r; }\n\n// (public) this ^ a\nfunction op_xor(x,y) { return x^y; }\nfunction bnXor(a) { var r = nbi(); this.bitwiseTo(a,op_xor,r); return r; }\n\n// (public) this & ~a\nfunction op_andnot(x,y) { return x&~y; }\nfunction bnAndNot(a) { var r = nbi(); this.bitwiseTo(a,op_andnot,r); return r; }\n\n// (public) ~this\nfunction bnNot() {\n  var r = nbi();\n  for(var i = 0; i < this.t; ++i) r[i] = this.DM&~this[i];\n  r.t = this.t;\n  r.s = ~this.s;\n  return r;\n}\n\n// (public) this << n\nfunction bnShiftLeft(n) {\n  var r = nbi();\n  if(n < 0) this.rShiftTo(-n,r); else this.lShiftTo(n,r);\n  return r;\n}\n\n// (public) this >> n\nfunction bnShiftRight(n) {\n  var r = nbi();\n  if(n < 0) this.lShiftTo(-n,r); else this.rShiftTo(n,r);\n  return r;\n}\n\n// return index of lowest 1-bit in x, x < 2^31\nfunction lbit(x) {\n  if(x == 0) return -1;\n  var r = 0;\n  if((x&0xffff) == 0) { x >>= 16; r += 16; }\n  if((x&0xff) == 0) { x >>= 8; r += 8; }\n  if((x&0xf) == 0) { x >>= 4; r += 4; }\n  if((x&3) == 0) { x >>= 2; r += 2; }\n  if((x&1) == 0) ++r;\n  return r;\n}\n\n// (public) returns index of lowest 1-bit (or -1 if none)\nfunction bnGetLowestSetBit() {\n  for(var i = 0; i < this.t; ++i)\n    if(this[i] != 0) return i*this.DB+lbit(this[i]);\n  if(this.s < 0) return this.t*this.DB;\n  return -1;\n}\n\n// return number of 1 bits in x\nfunction cbit(x) {\n  var r = 0;\n  while(x != 0) { x &= x-1; ++r; }\n  return r;\n}\n\n// (public) return number of set bits\nfunction bnBitCount() {\n  var r = 0, x = this.s&this.DM;\n  for(var i = 0; i < this.t; ++i) r += cbit(this[i]^x);\n  return r;\n}\n\n// (public) true iff nth bit is set\nfunction bnTestBit(n) {\n  var j = Math.floor(n/this.DB);\n  if(j >= this.t) return(this.s!=0);\n  return((this[j]&(1<<(n%this.DB)))!=0);\n}\n\n// (protected) this op (1<<n)\nfunction bnpChangeBit(n,op) {\n  var r = BigInteger.ONE.shiftLeft(n);\n  this.bitwiseTo(r,op,r);\n  return r;\n}\n\n// (public) this | (1<<n)\nfunction bnSetBit(n) { return this.changeBit(n,op_or); }\n\n// (public) this & ~(1<<n)\nfunction bnClearBit(n) { return this.changeBit(n,op_andnot); }\n\n// (public) this ^ (1<<n)\nfunction bnFlipBit(n) { return this.changeBit(n,op_xor); }\n\n// (protected) r = this + a\nfunction bnpAddTo(a,r) {\n  var i = 0, c = 0, m = Math.min(a.t,this.t);\n  while(i < m) {\n    c += this[i]+a[i];\n    r[i++] = c&this.DM;\n    c >>= this.DB;\n  }\n  if(a.t < this.t) {\n    c += a.s;\n    while(i < this.t) {\n      c += this[i];\n      r[i++] = c&this.DM;\n      c >>= this.DB;\n    }\n    c += this.s;\n  }\n  else {\n    c += this.s;\n    while(i < a.t) {\n      c += a[i];\n      r[i++] = c&this.DM;\n      c >>= this.DB;\n    }\n    c += a.s;\n  }\n  r.s = (c<0)?-1:0;\n  if(c > 0) r[i++] = c;\n  else if(c < -1) r[i++] = this.DV+c;\n  r.t = i;\n  r.clamp();\n}\n\n// (public) this + a\nfunction bnAdd(a) { var r = nbi(); this.addTo(a,r); return r; }\n\n// (public) this - a\nfunction bnSubtract(a) { var r = nbi(); this.subTo(a,r); return r; }\n\n// (public) this * a\nfunction bnMultiply(a) { var r = nbi(); this.multiplyTo(a,r); return r; }\n\n// (public) this^2\nfunction bnSquare() { var r = nbi(); this.squareTo(r); return r; }\n\n// (public) this / a\nfunction bnDivide(a) { var r = nbi(); this.divRemTo(a,r,null); return r; }\n\n// (public) this % a\nfunction bnRemainder(a) { var r = nbi(); this.divRemTo(a,null,r); return r; }\n\n// (public) [this/a,this%a]\nfunction bnDivideAndRemainder(a) {\n  var q = nbi(), r = nbi();\n  this.divRemTo(a,q,r);\n  return new Array(q,r);\n}\n\n// (protected) this *= n, this >= 0, 1 < n < DV\nfunction bnpDMultiply(n) {\n  this[this.t] = this.am(0,n-1,this,0,0,this.t);\n  ++this.t;\n  this.clamp();\n}\n\n// (protected) this += n << w words, this >= 0\nfunction bnpDAddOffset(n,w) {\n  if(n == 0) return;\n  while(this.t <= w) this[this.t++] = 0;\n  this[w] += n;\n  while(this[w] >= this.DV) {\n    this[w] -= this.DV;\n    if(++w >= this.t) this[this.t++] = 0;\n    ++this[w];\n  }\n}\n\n// A \"null\" reducer\nfunction NullExp() {}\nfunction nNop(x) { return x; }\nfunction nMulTo(x,y,r) { x.multiplyTo(y,r); }\nfunction nSqrTo(x,r) { x.squareTo(r); }\n\nNullExp.prototype.convert = nNop;\nNullExp.prototype.revert = nNop;\nNullExp.prototype.mulTo = nMulTo;\nNullExp.prototype.sqrTo = nSqrTo;\n\n// (public) this^e\nfunction bnPow(e) { return this.exp(e,new NullExp()); }\n\n// (protected) r = lower n words of \"this * a\", a.t <= n\n// \"this\" should be the larger one if appropriate.\nfunction bnpMultiplyLowerTo(a,n,r) {\n  var i = Math.min(this.t+a.t,n);\n  r.s = 0; // assumes a,this >= 0\n  r.t = i;\n  while(i > 0) r[--i] = 0;\n  var j;\n  for(j = r.t-this.t; i < j; ++i) r[i+this.t] = this.am(0,a[i],r,i,0,this.t);\n  for(j = Math.min(a.t,n); i < j; ++i) this.am(0,a[i],r,i,0,n-i);\n  r.clamp();\n}\n\n// (protected) r = \"this * a\" without lower n words, n > 0\n// \"this\" should be the larger one if appropriate.\nfunction bnpMultiplyUpperTo(a,n,r) {\n  --n;\n  var i = r.t = this.t+a.t-n;\n  r.s = 0; // assumes a,this >= 0\n  while(--i >= 0) r[i] = 0;\n  for(i = Math.max(n-this.t,0); i < a.t; ++i)\n    r[this.t+i-n] = this.am(n-i,a[i],r,0,0,this.t+i-n);\n  r.clamp();\n  r.drShiftTo(1,r);\n}\n\n// Barrett modular reduction\nfunction Barrett(m) {\n  // setup Barrett\n  this.r2 = nbi();\n  this.q3 = nbi();\n  BigInteger.ONE.dlShiftTo(2*m.t,this.r2);\n  this.mu = this.r2.divide(m);\n  this.m = m;\n}\n\nfunction barrettConvert(x) {\n  if(x.s < 0 || x.t > 2*this.m.t) return x.mod(this.m);\n  else if(x.compareTo(this.m) < 0) return x;\n  else { var r = nbi(); x.copyTo(r); this.reduce(r); return r; }\n}\n\nfunction barrettRevert(x) { return x; }\n\n// x = x mod m (HAC 14.42)\nfunction barrettReduce(x) {\n  x.drShiftTo(this.m.t-1,this.r2);\n  if(x.t > this.m.t+1) { x.t = this.m.t+1; x.clamp(); }\n  this.mu.multiplyUpperTo(this.r2,this.m.t+1,this.q3);\n  this.m.multiplyLowerTo(this.q3,this.m.t+1,this.r2);\n  while(x.compareTo(this.r2) < 0) x.dAddOffset(1,this.m.t+1);\n  x.subTo(this.r2,x);\n  while(x.compareTo(this.m) >= 0) x.subTo(this.m,x);\n}\n\n// r = x^2 mod m; x != r\nfunction barrettSqrTo(x,r) { x.squareTo(r); this.reduce(r); }\n\n// r = x*y mod m; x,y != r\nfunction barrettMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }\n\nBarrett.prototype.convert = barrettConvert;\nBarrett.prototype.revert = barrettRevert;\nBarrett.prototype.reduce = barrettReduce;\nBarrett.prototype.mulTo = barrettMulTo;\nBarrett.prototype.sqrTo = barrettSqrTo;\n\n// (public) this^e % m (HAC 14.85)\nfunction bnModPow(e,m) {\n  var i = e.bitLength(), k, r = nbv(1), z;\n  if(i <= 0) return r;\n  else if(i < 18) k = 1;\n  else if(i < 48) k = 3;\n  else if(i < 144) k = 4;\n  else if(i < 768) k = 5;\n  else k = 6;\n  if(i < 8)\n    z = new Classic(m);\n  else if(m.isEven())\n    z = new Barrett(m);\n  else\n    z = new Montgomery(m);\n\n  // precomputation\n  var g = new Array(), n = 3, k1 = k-1, km = (1<<k)-1;\n  g[1] = z.convert(this);\n  if(k > 1) {\n    var g2 = nbi();\n    z.sqrTo(g[1],g2);\n    while(n <= km) {\n      g[n] = nbi();\n      z.mulTo(g2,g[n-2],g[n]);\n      n += 2;\n    }\n  }\n\n  var j = e.t-1, w, is1 = true, r2 = nbi(), t;\n  i = nbits(e[j])-1;\n  while(j >= 0) {\n    if(i >= k1) w = (e[j]>>(i-k1))&km;\n    else {\n      w = (e[j]&((1<<(i+1))-1))<<(k1-i);\n      if(j > 0) w |= e[j-1]>>(this.DB+i-k1);\n    }\n\n    n = k;\n    while((w&1) == 0) { w >>= 1; --n; }\n    if((i -= n) < 0) { i += this.DB; --j; }\n    if(is1) {\t// ret == 1, don't bother squaring or multiplying it\n      g[w].copyTo(r);\n      is1 = false;\n    }\n    else {\n      while(n > 1) { z.sqrTo(r,r2); z.sqrTo(r2,r); n -= 2; }\n      if(n > 0) z.sqrTo(r,r2); else { t = r; r = r2; r2 = t; }\n      z.mulTo(r2,g[w],r);\n    }\n\n    while(j >= 0 && (e[j]&(1<<i)) == 0) {\n      z.sqrTo(r,r2); t = r; r = r2; r2 = t;\n      if(--i < 0) { i = this.DB-1; --j; }\n    }\n  }\n  return z.revert(r);\n}\n\n// (public) gcd(this,a) (HAC 14.54)\nfunction bnGCD(a) {\n  var x = (this.s<0)?this.negate():this.clone();\n  var y = (a.s<0)?a.negate():a.clone();\n  if(x.compareTo(y) < 0) { var t = x; x = y; y = t; }\n  var i = x.getLowestSetBit(), g = y.getLowestSetBit();\n  if(g < 0) return x;\n  if(i < g) g = i;\n  if(g > 0) {\n    x.rShiftTo(g,x);\n    y.rShiftTo(g,y);\n  }\n  while(x.signum() > 0) {\n    if((i = x.getLowestSetBit()) > 0) x.rShiftTo(i,x);\n    if((i = y.getLowestSetBit()) > 0) y.rShiftTo(i,y);\n    if(x.compareTo(y) >= 0) {\n      x.subTo(y,x);\n      x.rShiftTo(1,x);\n    }\n    else {\n      y.subTo(x,y);\n      y.rShiftTo(1,y);\n    }\n  }\n  if(g > 0) y.lShiftTo(g,y);\n  return y;\n}\n\n// (protected) this % n, n < 2^26\nfunction bnpModInt(n) {\n  if(n <= 0) return 0;\n  var d = this.DV%n, r = (this.s<0)?n-1:0;\n  if(this.t > 0)\n    if(d == 0) r = this[0]%n;\n    else for(var i = this.t-1; i >= 0; --i) r = (d*r+this[i])%n;\n  return r;\n}\n\n// (public) 1/this % m (HAC 14.61)\nfunction bnModInverse(m) {\n  var ac = m.isEven();\n  if((this.isEven() && ac) || m.signum() == 0) return BigInteger.ZERO;\n  var u = m.clone(), v = this.clone();\n  var a = nbv(1), b = nbv(0), c = nbv(0), d = nbv(1);\n  while(u.signum() != 0) {\n    while(u.isEven()) {\n      u.rShiftTo(1,u);\n      if(ac) {\n        if(!a.isEven() || !b.isEven()) { a.addTo(this,a); b.subTo(m,b); }\n        a.rShiftTo(1,a);\n      }\n      else if(!b.isEven()) b.subTo(m,b);\n      b.rShiftTo(1,b);\n    }\n    while(v.isEven()) {\n      v.rShiftTo(1,v);\n      if(ac) {\n        if(!c.isEven() || !d.isEven()) { c.addTo(this,c); d.subTo(m,d); }\n        c.rShiftTo(1,c);\n      }\n      else if(!d.isEven()) d.subTo(m,d);\n      d.rShiftTo(1,d);\n    }\n    if(u.compareTo(v) >= 0) {\n      u.subTo(v,u);\n      if(ac) a.subTo(c,a);\n      b.subTo(d,b);\n    }\n    else {\n      v.subTo(u,v);\n      if(ac) c.subTo(a,c);\n      d.subTo(b,d);\n    }\n  }\n  if(v.compareTo(BigInteger.ONE) != 0) return BigInteger.ZERO;\n  if(d.compareTo(m) >= 0) return d.subtract(m);\n  if(d.signum() < 0) d.addTo(m,d); else return d;\n  if(d.signum() < 0) return d.add(m); else return d;\n}\n\nvar lowprimes = [2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97,101,103,107,109,113,127,131,137,139,149,151,157,163,167,173,179,181,191,193,197,199,211,223,227,229,233,239,241,251,257,263,269,271,277,281,283,293,307,311,313,317,331,337,347,349,353,359,367,373,379,383,389,397,401,409,419,421,431,433,439,443,449,457,461,463,467,479,487,491,499,503,509,521,523,541,547,557,563,569,571,577,587,593,599,601,607,613,617,619,631,641,643,647,653,659,661,673,677,683,691,701,709,719,727,733,739,743,751,757,761,769,773,787,797,809,811,821,823,827,829,839,853,857,859,863,877,881,883,887,907,911,919,929,937,941,947,953,967,971,977,983,991,997];\nvar lplim = (1<<26)/lowprimes[lowprimes.length-1];\n\n// (public) test primality with certainty >= 1-.5^t\nfunction bnIsProbablePrime(t) {\n  var i, x = this.abs();\n  if(x.t == 1 && x[0] <= lowprimes[lowprimes.length-1]) {\n    for(i = 0; i < lowprimes.length; ++i)\n      if(x[0] == lowprimes[i]) return true;\n    return false;\n  }\n  if(x.isEven()) return false;\n  i = 1;\n  while(i < lowprimes.length) {\n    var m = lowprimes[i], j = i+1;\n    while(j < lowprimes.length && m < lplim) m *= lowprimes[j++];\n    m = x.modInt(m);\n    while(i < j) if(m%lowprimes[i++] == 0) return false;\n  }\n  return x.millerRabin(t);\n}\n\n// (protected) true if probably prime (HAC 4.24, Miller-Rabin)\nfunction bnpMillerRabin(t) {\n  var n1 = this.subtract(BigInteger.ONE);\n  var k = n1.getLowestSetBit();\n  if(k <= 0) return false;\n  var r = n1.shiftRight(k);\n  t = (t+1)>>1;\n  if(t > lowprimes.length) t = lowprimes.length;\n  var a = nbi();\n  for(var i = 0; i < t; ++i) {\n    //Pick bases at random, instead of starting at 2\n    a.fromInt(lowprimes[Math.floor(Math.random()*lowprimes.length)]);\n    var y = a.modPow(r,this);\n    if(y.compareTo(BigInteger.ONE) != 0 && y.compareTo(n1) != 0) {\n      var j = 1;\n      while(j++ < k && y.compareTo(n1) != 0) {\n        y = y.modPowInt(2,this);\n        if(y.compareTo(BigInteger.ONE) == 0) return false;\n      }\n      if(y.compareTo(n1) != 0) return false;\n    }\n  }\n  return true;\n}\n\n// protected\nBigInteger.prototype.chunkSize = bnpChunkSize;\nBigInteger.prototype.toRadix = bnpToRadix;\nBigInteger.prototype.fromRadix = bnpFromRadix;\nBigInteger.prototype.fromNumber = bnpFromNumber;\nBigInteger.prototype.bitwiseTo = bnpBitwiseTo;\nBigInteger.prototype.changeBit = bnpChangeBit;\nBigInteger.prototype.addTo = bnpAddTo;\nBigInteger.prototype.dMultiply = bnpDMultiply;\nBigInteger.prototype.dAddOffset = bnpDAddOffset;\nBigInteger.prototype.multiplyLowerTo = bnpMultiplyLowerTo;\nBigInteger.prototype.multiplyUpperTo = bnpMultiplyUpperTo;\nBigInteger.prototype.modInt = bnpModInt;\nBigInteger.prototype.millerRabin = bnpMillerRabin;\n\n// public\nBigInteger.prototype.clone = bnClone;\nBigInteger.prototype.intValue = bnIntValue;\nBigInteger.prototype.byteValue = bnByteValue;\nBigInteger.prototype.shortValue = bnShortValue;\nBigInteger.prototype.signum = bnSigNum;\nBigInteger.prototype.toByteArray = bnToByteArray;\nBigInteger.prototype.equals = bnEquals;\nBigInteger.prototype.min = bnMin;\nBigInteger.prototype.max = bnMax;\nBigInteger.prototype.and = bnAnd;\nBigInteger.prototype.or = bnOr;\nBigInteger.prototype.xor = bnXor;\nBigInteger.prototype.andNot = bnAndNot;\nBigInteger.prototype.not = bnNot;\nBigInteger.prototype.shiftLeft = bnShiftLeft;\nBigInteger.prototype.shiftRight = bnShiftRight;\nBigInteger.prototype.getLowestSetBit = bnGetLowestSetBit;\nBigInteger.prototype.bitCount = bnBitCount;\nBigInteger.prototype.testBit = bnTestBit;\nBigInteger.prototype.setBit = bnSetBit;\nBigInteger.prototype.clearBit = bnClearBit;\nBigInteger.prototype.flipBit = bnFlipBit;\nBigInteger.prototype.add = bnAdd;\nBigInteger.prototype.subtract = bnSubtract;\nBigInteger.prototype.multiply = bnMultiply;\nBigInteger.prototype.divide = bnDivide;\nBigInteger.prototype.remainder = bnRemainder;\nBigInteger.prototype.divideAndRemainder = bnDivideAndRemainder;\nBigInteger.prototype.modPow = bnModPow;\nBigInteger.prototype.modInverse = bnModInverse;\nBigInteger.prototype.pow = bnPow;\nBigInteger.prototype.gcd = bnGCD;\nBigInteger.prototype.isProbablePrime = bnIsProbablePrime;\n\n// JSBN-specific extension\nBigInteger.prototype.square = bnSquare;\n\n// BigInteger interfaces not implemented in jsbn:\n\n// BigInteger(int signum, byte[] magnitude)\n// double doubleValue()\n// float floatValue()\n// int hashCode()\n// long longValue()\n// static BigInteger valueOf(long val)\n"],"sourceRoot":"/source/"}