{"version":3,"sources":["lib/crypto/jsbn/jsbn.js"],"names":["BigInteger","a","b","c","this","fromNumber","fromString","nbi","am1","i","x","w","j","n","v","Math","floor","am2","xl","xh","l","h","m","am3","int2char","BI_RM","charAt","intAt","s","BI_RC","charCodeAt","bnpCopyTo","r","t","bnpFromInt","DV","nbv","fromInt","bnpFromString","k","fromRadix","length","mi","sh","DB","clamp","ZERO","subTo","bnpClamp","DM","bnToString","negate","toString","toRadix","d","km","p","bnNegate","bnAbs","bnCompareTo","nbits","bnBitLength","bnpDLShiftTo","bnpDRShiftTo","max","bnpLShiftTo","bs","cbs","bm","ds","bnpRShiftTo","bnpSubTo","min","bnpMultiplyTo","abs","y","am","bnpSquareTo","bnpDivRemTo","q","pm","pt","copyTo","ts","ms","nsh","lShiftTo","ys","y0","yt","F1","F2","d1","FV","d2","e","dlShiftTo","compareTo","ONE","qd","drShiftTo","rShiftTo","bnMod","divRemTo","Classic","cConvert","mod","cRevert","cReduce","cMulTo","multiplyTo","reduce","cSqrTo","squareTo","bnpInvDigit","Montgomery","mp","invDigit","mpl","mph","um","mt2","montConvert","montRevert","montReduce","u0","montSqrTo","montMulTo","bnpIsEven","bnpExp","z","r2","g","convert","sqrTo","mulTo","revert","bnModPowInt","isEven","exp","dbits","canary","j_lm","navigator","appName","prototype","BI_FP","pow","Array","rr","vv","bitLength","modPowInt"],"mappings":"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","file":"lib/crypto/jsbn/jsbn.min.js","sourcesContent":["// Copyright (c) 2005  Tom Wu\n// All Rights Reserved.\n// See \"LICENSE\" for details.\n\n// Basic JavaScript BN library - subset useful for RSA encryption.\n\n// Bits per digit\nvar dbits;\n\n// JavaScript engine analysis\nvar canary = 0xdeadbeefcafe;\nvar j_lm = ((canary&0xffffff)==0xefcafe);\n\n// (public) Constructor\nfunction BigInteger(a,b,c) {\n  if(a != null)\n    if(\"number\" == typeof a) this.fromNumber(a,b,c);\n    else if(b == null && \"string\" != typeof a) this.fromString(a,256);\n    else this.fromString(a,b);\n}\n\n// return new, unset BigInteger\nfunction nbi() { return new BigInteger(null); }\n\n// am: Compute w_j += (x*this_i), propagate carries,\n// c is initial carry, returns final carry.\n// c < 3*dvalue, x < 2*dvalue, this_i < dvalue\n// We need to select the fastest one that works in this environment.\n\n// am1: use a single mult and divide to get the high bits,\n// max digit bits should be 26 because\n// max internal value = 2*dvalue^2-2*dvalue (< 2^53)\nfunction am1(i,x,w,j,c,n) {\n  while(--n >= 0) {\n    var v = x*this[i++]+w[j]+c;\n    c = Math.floor(v/0x4000000);\n    w[j++] = v&0x3ffffff;\n  }\n  return c;\n}\n// am2 avoids a big mult-and-extract completely.\n// Max digit bits should be <= 30 because we do bitwise ops\n// on values up to 2*hdvalue^2-hdvalue-1 (< 2^31)\nfunction am2(i,x,w,j,c,n) {\n  var xl = x&0x7fff, xh = x>>15;\n  while(--n >= 0) {\n    var l = this[i]&0x7fff;\n    var h = this[i++]>>15;\n    var m = xh*l+h*xl;\n    l = xl*l+((m&0x7fff)<<15)+w[j]+(c&0x3fffffff);\n    c = (l>>>30)+(m>>>15)+xh*h+(c>>>30);\n    w[j++] = l&0x3fffffff;\n  }\n  return c;\n}\n// Alternately, set max digit bits to 28 since some\n// browsers slow down when dealing with 32-bit numbers.\nfunction am3(i,x,w,j,c,n) {\n  var xl = x&0x3fff, xh = x>>14;\n  while(--n >= 0) {\n    var l = this[i]&0x3fff;\n    var h = this[i++]>>14;\n    var m = xh*l+h*xl;\n    l = xl*l+((m&0x3fff)<<14)+w[j]+c;\n    c = (l>>28)+(m>>14)+xh*h;\n    w[j++] = l&0xfffffff;\n  }\n  return c;\n}\nif(j_lm && (navigator.appName == \"Microsoft Internet Explorer\")) {\n  BigInteger.prototype.am = am2;\n  dbits = 30;\n}\nelse if(j_lm && (navigator.appName != \"Netscape\")) {\n  BigInteger.prototype.am = am1;\n  dbits = 26;\n}\nelse { // Mozilla/Netscape seems to prefer am3\n  BigInteger.prototype.am = am3;\n  dbits = 28;\n}\n\nBigInteger.prototype.DB = dbits;\nBigInteger.prototype.DM = ((1<<dbits)-1);\nBigInteger.prototype.DV = (1<<dbits);\n\nvar BI_FP = 52;\nBigInteger.prototype.FV = Math.pow(2,BI_FP);\nBigInteger.prototype.F1 = BI_FP-dbits;\nBigInteger.prototype.F2 = 2*dbits-BI_FP;\n\n// Digit conversions\nvar BI_RM = \"0123456789abcdefghijklmnopqrstuvwxyz\";\nvar BI_RC = new Array();\nvar rr,vv;\nrr = \"0\".charCodeAt(0);\nfor(vv = 0; vv <= 9; ++vv) BI_RC[rr++] = vv;\nrr = \"a\".charCodeAt(0);\nfor(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;\nrr = \"A\".charCodeAt(0);\nfor(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;\n\nfunction int2char(n) { return BI_RM.charAt(n); }\nfunction intAt(s,i) {\n  var c = BI_RC[s.charCodeAt(i)];\n  return (c==null)?-1:c;\n}\n\n// (protected) copy this to r\nfunction bnpCopyTo(r) {\n  for(var i = this.t-1; i >= 0; --i) r[i] = this[i];\n  r.t = this.t;\n  r.s = this.s;\n}\n\n// (protected) set from integer value x, -DV <= x < DV\nfunction bnpFromInt(x) {\n  this.t = 1;\n  this.s = (x<0)?-1:0;\n  if(x > 0) this[0] = x;\n  else if(x < -1) this[0] = x+DV;\n  else this.t = 0;\n}\n\n// return bigint initialized to value\nfunction nbv(i) { var r = nbi(); r.fromInt(i); return r; }\n\n// (protected) set from string and radix\nfunction bnpFromString(s,b) {\n  var k;\n  if(b == 16) k = 4;\n  else if(b == 8) k = 3;\n  else if(b == 256) k = 8; // byte array\n  else if(b == 2) k = 1;\n  else if(b == 32) k = 5;\n  else if(b == 4) k = 2;\n  else { this.fromRadix(s,b); return; }\n  this.t = 0;\n  this.s = 0;\n  var i = s.length, mi = false, sh = 0;\n  while(--i >= 0) {\n    var x = (k==8)?s[i]&0xff:intAt(s,i);\n    if(x < 0) {\n      if(s.charAt(i) == \"-\") mi = true;\n      continue;\n    }\n    mi = false;\n    if(sh == 0)\n      this[this.t++] = x;\n    else if(sh+k > this.DB) {\n      this[this.t-1] |= (x&((1<<(this.DB-sh))-1))<<sh;\n      this[this.t++] = (x>>(this.DB-sh));\n    }\n    else\n      this[this.t-1] |= x<<sh;\n    sh += k;\n    if(sh >= this.DB) sh -= this.DB;\n  }\n  if(k == 8 && (s[0]&0x80) != 0) {\n    this.s = -1;\n    if(sh > 0) this[this.t-1] |= ((1<<(this.DB-sh))-1)<<sh;\n  }\n  this.clamp();\n  if(mi) BigInteger.ZERO.subTo(this,this);\n}\n\n// (protected) clamp off excess high words\nfunction bnpClamp() {\n  var c = this.s&this.DM;\n  while(this.t > 0 && this[this.t-1] == c) --this.t;\n}\n\n// (public) return string representation in given radix\nfunction bnToString(b) {\n  if(this.s < 0) return \"-\"+this.negate().toString(b);\n  var k;\n  if(b == 16) k = 4;\n  else if(b == 8) k = 3;\n  else if(b == 2) k = 1;\n  else if(b == 32) k = 5;\n  else if(b == 4) k = 2;\n  else return this.toRadix(b);\n  var km = (1<<k)-1, d, m = false, r = \"\", i = this.t;\n  var p = this.DB-(i*this.DB)%k;\n  if(i-- > 0) {\n    if(p < this.DB && (d = this[i]>>p) > 0) { m = true; r = int2char(d); }\n    while(i >= 0) {\n      if(p < k) {\n        d = (this[i]&((1<<p)-1))<<(k-p);\n        d |= this[--i]>>(p+=this.DB-k);\n      }\n      else {\n        d = (this[i]>>(p-=k))&km;\n        if(p <= 0) { p += this.DB; --i; }\n      }\n      if(d > 0) m = true;\n      if(m) r += int2char(d);\n    }\n  }\n  return m?r:\"0\";\n}\n\n// (public) -this\nfunction bnNegate() { var r = nbi(); BigInteger.ZERO.subTo(this,r); return r; }\n\n// (public) |this|\nfunction bnAbs() { return (this.s<0)?this.negate():this; }\n\n// (public) return + if this > a, - if this < a, 0 if equal\nfunction bnCompareTo(a) {\n  var r = this.s-a.s;\n  if(r != 0) return r;\n  var i = this.t;\n  r = i-a.t;\n  if(r != 0) return (this.s<0)?-r:r;\n  while(--i >= 0) if((r=this[i]-a[i]) != 0) return r;\n  return 0;\n}\n\n// returns bit length of the integer x\nfunction nbits(x) {\n  var r = 1, t;\n  if((t=x>>>16) != 0) { x = t; r += 16; }\n  if((t=x>>8) != 0) { x = t; r += 8; }\n  if((t=x>>4) != 0) { x = t; r += 4; }\n  if((t=x>>2) != 0) { x = t; r += 2; }\n  if((t=x>>1) != 0) { x = t; r += 1; }\n  return r;\n}\n\n// (public) return the number of bits in \"this\"\nfunction bnBitLength() {\n  if(this.t <= 0) return 0;\n  return this.DB*(this.t-1)+nbits(this[this.t-1]^(this.s&this.DM));\n}\n\n// (protected) r = this << n*DB\nfunction bnpDLShiftTo(n,r) {\n  var i;\n  for(i = this.t-1; i >= 0; --i) r[i+n] = this[i];\n  for(i = n-1; i >= 0; --i) r[i] = 0;\n  r.t = this.t+n;\n  r.s = this.s;\n}\n\n// (protected) r = this >> n*DB\nfunction bnpDRShiftTo(n,r) {\n  for(var i = n; i < this.t; ++i) r[i-n] = this[i];\n  r.t = Math.max(this.t-n,0);\n  r.s = this.s;\n}\n\n// (protected) r = this << n\nfunction bnpLShiftTo(n,r) {\n  var bs = n%this.DB;\n  var cbs = this.DB-bs;\n  var bm = (1<<cbs)-1;\n  var ds = Math.floor(n/this.DB), c = (this.s<<bs)&this.DM, i;\n  for(i = this.t-1; i >= 0; --i) {\n    r[i+ds+1] = (this[i]>>cbs)|c;\n    c = (this[i]&bm)<<bs;\n  }\n  for(i = ds-1; i >= 0; --i) r[i] = 0;\n  r[ds] = c;\n  r.t = this.t+ds+1;\n  r.s = this.s;\n  r.clamp();\n}\n\n// (protected) r = this >> n\nfunction bnpRShiftTo(n,r) {\n  r.s = this.s;\n  var ds = Math.floor(n/this.DB);\n  if(ds >= this.t) { r.t = 0; return; }\n  var bs = n%this.DB;\n  var cbs = this.DB-bs;\n  var bm = (1<<bs)-1;\n  r[0] = this[ds]>>bs;\n  for(var i = ds+1; i < this.t; ++i) {\n    r[i-ds-1] |= (this[i]&bm)<<cbs;\n    r[i-ds] = this[i]>>bs;\n  }\n  if(bs > 0) r[this.t-ds-1] |= (this.s&bm)<<cbs;\n  r.t = this.t-ds;\n  r.clamp();\n}\n\n// (protected) r = this - a\nfunction bnpSubTo(a,r) {\n  var i = 0, c = 0, m = Math.min(a.t,this.t);\n  while(i < m) {\n    c += this[i]-a[i];\n    r[i++] = c&this.DM;\n    c >>= this.DB;\n  }\n  if(a.t < this.t) {\n    c -= a.s;\n    while(i < this.t) {\n      c += this[i];\n      r[i++] = c&this.DM;\n      c >>= this.DB;\n    }\n    c += this.s;\n  }\n  else {\n    c += this.s;\n    while(i < a.t) {\n      c -= a[i];\n      r[i++] = c&this.DM;\n      c >>= this.DB;\n    }\n    c -= a.s;\n  }\n  r.s = (c<0)?-1:0;\n  if(c < -1) r[i++] = this.DV+c;\n  else if(c > 0) r[i++] = c;\n  r.t = i;\n  r.clamp();\n}\n\n// (protected) r = this * a, r != this,a (HAC 14.12)\n// \"this\" should be the larger one if appropriate.\nfunction bnpMultiplyTo(a,r) {\n  var x = this.abs(), y = a.abs();\n  var i = x.t;\n  r.t = i+y.t;\n  while(--i >= 0) r[i] = 0;\n  for(i = 0; i < y.t; ++i) r[i+x.t] = x.am(0,y[i],r,i,0,x.t);\n  r.s = 0;\n  r.clamp();\n  if(this.s != a.s) BigInteger.ZERO.subTo(r,r);\n}\n\n// (protected) r = this^2, r != this (HAC 14.16)\nfunction bnpSquareTo(r) {\n  var x = this.abs();\n  var i = r.t = 2*x.t;\n  while(--i >= 0) r[i] = 0;\n  for(i = 0; i < x.t-1; ++i) {\n    var c = x.am(i,x[i],r,2*i,0,1);\n    if((r[i+x.t]+=x.am(i+1,2*x[i],r,2*i+1,c,x.t-i-1)) >= x.DV) {\n      r[i+x.t] -= x.DV;\n      r[i+x.t+1] = 1;\n    }\n  }\n  if(r.t > 0) r[r.t-1] += x.am(i,x[i],r,2*i,0,1);\n  r.s = 0;\n  r.clamp();\n}\n\n// (protected) divide this by m, quotient and remainder to q, r (HAC 14.20)\n// r != q, this != m.  q or r may be null.\nfunction bnpDivRemTo(m,q,r) {\n  var pm = m.abs();\n  if(pm.t <= 0) return;\n  var pt = this.abs();\n  if(pt.t < pm.t) {\n    if(q != null) q.fromInt(0);\n    if(r != null) this.copyTo(r);\n    return;\n  }\n  if(r == null) r = nbi();\n  var y = nbi(), ts = this.s, ms = m.s;\n  var nsh = this.DB-nbits(pm[pm.t-1]);\t// normalize modulus\n  if(nsh > 0) { pm.lShiftTo(nsh,y); pt.lShiftTo(nsh,r); }\n  else { pm.copyTo(y); pt.copyTo(r); }\n  var ys = y.t;\n  var y0 = y[ys-1];\n  if(y0 == 0) return;\n  var yt = y0*(1<<this.F1)+((ys>1)?y[ys-2]>>this.F2:0);\n  var d1 = this.FV/yt, d2 = (1<<this.F1)/yt, e = 1<<this.F2;\n  var i = r.t, j = i-ys, t = (q==null)?nbi():q;\n  y.dlShiftTo(j,t);\n  if(r.compareTo(t) >= 0) {\n    r[r.t++] = 1;\n    r.subTo(t,r);\n  }\n  BigInteger.ONE.dlShiftTo(ys,t);\n  t.subTo(y,y);\t// \"negative\" y so we can replace sub with am later\n  while(y.t < ys) y[y.t++] = 0;\n  while(--j >= 0) {\n    // Estimate quotient digit\n    var qd = (r[--i]==y0)?this.DM:Math.floor(r[i]*d1+(r[i-1]+e)*d2);\n    if((r[i]+=y.am(0,qd,r,j,0,ys)) < qd) {\t// Try it out\n      y.dlShiftTo(j,t);\n      r.subTo(t,r);\n      while(r[i] < --qd) r.subTo(t,r);\n    }\n  }\n  if(q != null) {\n    r.drShiftTo(ys,q);\n    if(ts != ms) BigInteger.ZERO.subTo(q,q);\n  }\n  r.t = ys;\n  r.clamp();\n  if(nsh > 0) r.rShiftTo(nsh,r);\t// Denormalize remainder\n  if(ts < 0) BigInteger.ZERO.subTo(r,r);\n}\n\n// (public) this mod a\nfunction bnMod(a) {\n  var r = nbi();\n  this.abs().divRemTo(a,null,r);\n  if(this.s < 0 && r.compareTo(BigInteger.ZERO) > 0) a.subTo(r,r);\n  return r;\n}\n\n// Modular reduction using \"classic\" algorithm\nfunction Classic(m) { this.m = m; }\nfunction cConvert(x) {\n  if(x.s < 0 || x.compareTo(this.m) >= 0) return x.mod(this.m);\n  else return x;\n}\nfunction cRevert(x) { return x; }\nfunction cReduce(x) { x.divRemTo(this.m,null,x); }\nfunction cMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }\nfunction cSqrTo(x,r) { x.squareTo(r); this.reduce(r); }\n\nClassic.prototype.convert = cConvert;\nClassic.prototype.revert = cRevert;\nClassic.prototype.reduce = cReduce;\nClassic.prototype.mulTo = cMulTo;\nClassic.prototype.sqrTo = cSqrTo;\n\n// (protected) return \"-1/this % 2^DB\"; useful for Mont. reduction\n// justification:\n//         xy == 1 (mod m)\n//         xy =  1+km\n//   xy(2-xy) = (1+km)(1-km)\n// x[y(2-xy)] = 1-k^2m^2\n// x[y(2-xy)] == 1 (mod m^2)\n// if y is 1/x mod m, then y(2-xy) is 1/x mod m^2\n// should reduce x and y(2-xy) by m^2 at each step to keep size bounded.\n// JS multiply \"overflows\" differently from C/C++, so care is needed here.\nfunction bnpInvDigit() {\n  if(this.t < 1) return 0;\n  var x = this[0];\n  if((x&1) == 0) return 0;\n  var y = x&3;\t\t// y == 1/x mod 2^2\n  y = (y*(2-(x&0xf)*y))&0xf;\t// y == 1/x mod 2^4\n  y = (y*(2-(x&0xff)*y))&0xff;\t// y == 1/x mod 2^8\n  y = (y*(2-(((x&0xffff)*y)&0xffff)))&0xffff;\t// y == 1/x mod 2^16\n  // last step - calculate inverse mod DV directly;\n  // assumes 16 < DB <= 32 and assumes ability to handle 48-bit ints\n  y = (y*(2-x*y%this.DV))%this.DV;\t\t// y == 1/x mod 2^dbits\n  // we really want the negative inverse, and -DV < y < DV\n  return (y>0)?this.DV-y:-y;\n}\n\n// Montgomery reduction\nfunction Montgomery(m) {\n  this.m = m;\n  this.mp = m.invDigit();\n  this.mpl = this.mp&0x7fff;\n  this.mph = this.mp>>15;\n  this.um = (1<<(m.DB-15))-1;\n  this.mt2 = 2*m.t;\n}\n\n// xR mod m\nfunction montConvert(x) {\n  var r = nbi();\n  x.abs().dlShiftTo(this.m.t,r);\n  r.divRemTo(this.m,null,r);\n  if(x.s < 0 && r.compareTo(BigInteger.ZERO) > 0) this.m.subTo(r,r);\n  return r;\n}\n\n// x/R mod m\nfunction montRevert(x) {\n  var r = nbi();\n  x.copyTo(r);\n  this.reduce(r);\n  return r;\n}\n\n// x = x/R mod m (HAC 14.32)\nfunction montReduce(x) {\n  while(x.t <= this.mt2)\t// pad x so am has enough room later\n    x[x.t++] = 0;\n  for(var i = 0; i < this.m.t; ++i) {\n    // faster way of calculating u0 = x[i]*mp mod DV\n    var j = x[i]&0x7fff;\n    var u0 = (j*this.mpl+(((j*this.mph+(x[i]>>15)*this.mpl)&this.um)<<15))&x.DM;\n    // use am to combine the multiply-shift-add into one call\n    j = i+this.m.t;\n    x[j] += this.m.am(0,u0,x,i,0,this.m.t);\n    // propagate carry\n    while(x[j] >= x.DV) { x[j] -= x.DV; x[++j]++; }\n  }\n  x.clamp();\n  x.drShiftTo(this.m.t,x);\n  if(x.compareTo(this.m) >= 0) x.subTo(this.m,x);\n}\n\n// r = \"x^2/R mod m\"; x != r\nfunction montSqrTo(x,r) { x.squareTo(r); this.reduce(r); }\n\n// r = \"xy/R mod m\"; x,y != r\nfunction montMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }\n\nMontgomery.prototype.convert = montConvert;\nMontgomery.prototype.revert = montRevert;\nMontgomery.prototype.reduce = montReduce;\nMontgomery.prototype.mulTo = montMulTo;\nMontgomery.prototype.sqrTo = montSqrTo;\n\n// (protected) true iff this is even\nfunction bnpIsEven() { return ((this.t>0)?(this[0]&1):this.s) == 0; }\n\n// (protected) this^e, e < 2^32, doing sqr and mul with \"r\" (HAC 14.79)\nfunction bnpExp(e,z) {\n  if(e > 0xffffffff || e < 1) return BigInteger.ONE;\n  var r = nbi(), r2 = nbi(), g = z.convert(this), i = nbits(e)-1;\n  g.copyTo(r);\n  while(--i >= 0) {\n    z.sqrTo(r,r2);\n    if((e&(1<<i)) > 0) z.mulTo(r2,g,r);\n    else { var t = r; r = r2; r2 = t; }\n  }\n  return z.revert(r);\n}\n\n// (public) this^e % m, 0 <= e < 2^32\nfunction bnModPowInt(e,m) {\n  var z;\n  if(e < 256 || m.isEven()) z = new Classic(m); else z = new Montgomery(m);\n  return this.exp(e,z);\n}\n\n// protected\nBigInteger.prototype.copyTo = bnpCopyTo;\nBigInteger.prototype.fromInt = bnpFromInt;\nBigInteger.prototype.fromString = bnpFromString;\nBigInteger.prototype.clamp = bnpClamp;\nBigInteger.prototype.dlShiftTo = bnpDLShiftTo;\nBigInteger.prototype.drShiftTo = bnpDRShiftTo;\nBigInteger.prototype.lShiftTo = bnpLShiftTo;\nBigInteger.prototype.rShiftTo = bnpRShiftTo;\nBigInteger.prototype.subTo = bnpSubTo;\nBigInteger.prototype.multiplyTo = bnpMultiplyTo;\nBigInteger.prototype.squareTo = bnpSquareTo;\nBigInteger.prototype.divRemTo = bnpDivRemTo;\nBigInteger.prototype.invDigit = bnpInvDigit;\nBigInteger.prototype.isEven = bnpIsEven;\nBigInteger.prototype.exp = bnpExp;\n\n// public\nBigInteger.prototype.toString = bnToString;\nBigInteger.prototype.negate = bnNegate;\nBigInteger.prototype.abs = bnAbs;\nBigInteger.prototype.compareTo = bnCompareTo;\nBigInteger.prototype.bitLength = bnBitLength;\nBigInteger.prototype.mod = bnMod;\nBigInteger.prototype.modPowInt = bnModPowInt;\n\n// \"constants\"\nBigInteger.ZERO = nbv(0);\nBigInteger.ONE = nbv(1);\n"],"sourceRoot":"/source/"}