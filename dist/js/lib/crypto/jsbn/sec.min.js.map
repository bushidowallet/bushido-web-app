{"version":3,"sources":["lib/crypto/jsbn/sec.js"],"names":["X9ECParameters","curve","g","n","h","this","x9getCurve","x9getG","x9getN","x9getH","fromHex","s","BigInteger","secp128r1","p","a","b","ONE","ECCurveFp","G","decodePointHex","secp160k1","ZERO","secp160r1","secp192k1","secp192r1","secp224r1","secp256k1","secp256r1","getSECCurveByName","name","prototype","getCurve","getG","getN","getH"],"mappings":"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","file":"lib/crypto/jsbn/sec.min.js","sourcesContent":["// Named EC curves\r\n\r\n// Requires ec.js, jsbn.js, and jsbn2.js\r\n\r\n// ----------------\r\n// X9ECParameters\r\n\r\n// constructor\r\nfunction X9ECParameters(curve,g,n,h) {\r\n    this.curve = curve;\r\n    this.g = g;\r\n    this.n = n;\r\n    this.h = h;\r\n}\r\n\r\nfunction x9getCurve() {\r\n    return this.curve;\r\n}\r\n\r\nfunction x9getG() {\r\n    return this.g;\r\n}\r\n\r\nfunction x9getN() {\r\n    return this.n;\r\n}\r\n\r\nfunction x9getH() {\r\n    return this.h;\r\n}\r\n\r\nX9ECParameters.prototype.getCurve = x9getCurve;\r\nX9ECParameters.prototype.getG = x9getG;\r\nX9ECParameters.prototype.getN = x9getN;\r\nX9ECParameters.prototype.getH = x9getH;\r\n\r\n// ----------------\r\n// SECNamedCurves\r\n\r\nfunction fromHex(s) { return new BigInteger(s, 16); }\r\n\r\nfunction secp128r1() {\r\n    // p = 2^128 - 2^97 - 1\r\n    var p = fromHex(\"FFFFFFFDFFFFFFFFFFFFFFFFFFFFFFFF\");\r\n    var a = fromHex(\"FFFFFFFDFFFFFFFFFFFFFFFFFFFFFFFC\");\r\n    var b = fromHex(\"E87579C11079F43DD824993C2CEE5ED3\");\r\n    //byte[] S = Hex.decode(\"000E0D4D696E6768756151750CC03A4473D03679\");\r\n    var n = fromHex(\"FFFFFFFE0000000075A30D1B9038A115\");\r\n    var h = BigInteger.ONE;\r\n    var curve = new ECCurveFp(p, a, b);\r\n    var G = curve.decodePointHex(\"04\"\r\n                + \"161FF7528B899B2D0C28607CA52C5B86\"\r\n\t\t+ \"CF5AC8395BAFEB13C02DA292DDED7A83\");\r\n    return new X9ECParameters(curve, G, n, h);\r\n}\r\n\r\nfunction secp160k1() {\r\n    // p = 2^160 - 2^32 - 2^14 - 2^12 - 2^9 - 2^8 - 2^7 - 2^3 - 2^2 - 1\r\n    var p = fromHex(\"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFAC73\");\r\n    var a = BigInteger.ZERO;\r\n    var b = fromHex(\"7\");\r\n    //byte[] S = null;\r\n    var n = fromHex(\"0100000000000000000001B8FA16DFAB9ACA16B6B3\");\r\n    var h = BigInteger.ONE;\r\n    var curve = new ECCurveFp(p, a, b);\r\n    var G = curve.decodePointHex(\"04\"\r\n                + \"3B4C382CE37AA192A4019E763036F4F5DD4D7EBB\"\r\n                + \"938CF935318FDCED6BC28286531733C3F03C4FEE\");\r\n    return new X9ECParameters(curve, G, n, h);\r\n}\r\n\r\nfunction secp160r1() {\r\n    // p = 2^160 - 2^31 - 1\r\n    var p = fromHex(\"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF7FFFFFFF\");\r\n    var a = fromHex(\"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF7FFFFFFC\");\r\n    var b = fromHex(\"1C97BEFC54BD7A8B65ACF89F81D4D4ADC565FA45\");\r\n    //byte[] S = Hex.decode(\"1053CDE42C14D696E67687561517533BF3F83345\");\r\n    var n = fromHex(\"0100000000000000000001F4C8F927AED3CA752257\");\r\n    var h = BigInteger.ONE;\r\n    var curve = new ECCurveFp(p, a, b);\r\n    var G = curve.decodePointHex(\"04\"\r\n\t\t+ \"4A96B5688EF573284664698968C38BB913CBFC82\"\r\n\t\t+ \"23A628553168947D59DCC912042351377AC5FB32\");\r\n    return new X9ECParameters(curve, G, n, h);\r\n}\r\n\r\nfunction secp192k1() {\r\n    // p = 2^192 - 2^32 - 2^12 - 2^8 - 2^7 - 2^6 - 2^3 - 1\r\n    var p = fromHex(\"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFEE37\");\r\n    var a = BigInteger.ZERO;\r\n    var b = fromHex(\"3\");\r\n    //byte[] S = null;\r\n    var n = fromHex(\"FFFFFFFFFFFFFFFFFFFFFFFE26F2FC170F69466A74DEFD8D\");\r\n    var h = BigInteger.ONE;\r\n    var curve = new ECCurveFp(p, a, b);\r\n    var G = curve.decodePointHex(\"04\"\r\n                + \"DB4FF10EC057E9AE26B07D0280B7F4341DA5D1B1EAE06C7D\"\r\n                + \"9B2F2F6D9C5628A7844163D015BE86344082AA88D95E2F9D\");\r\n    return new X9ECParameters(curve, G, n, h);\r\n}\r\n\r\nfunction secp192r1() {\r\n    // p = 2^192 - 2^64 - 1\r\n    var p = fromHex(\"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFF\");\r\n    var a = fromHex(\"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFC\");\r\n    var b = fromHex(\"64210519E59C80E70FA7E9AB72243049FEB8DEECC146B9B1\");\r\n    //byte[] S = Hex.decode(\"3045AE6FC8422F64ED579528D38120EAE12196D5\");\r\n    var n = fromHex(\"FFFFFFFFFFFFFFFFFFFFFFFF99DEF836146BC9B1B4D22831\");\r\n    var h = BigInteger.ONE;\r\n    var curve = new ECCurveFp(p, a, b);\r\n    var G = curve.decodePointHex(\"04\"\r\n                + \"188DA80EB03090F67CBF20EB43A18800F4FF0AFD82FF1012\"\r\n                + \"07192B95FFC8DA78631011ED6B24CDD573F977A11E794811\");\r\n    return new X9ECParameters(curve, G, n, h);\r\n}\r\n\r\nfunction secp224r1() {\r\n    // p = 2^224 - 2^96 + 1\r\n    var p = fromHex(\"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000001\");\r\n    var a = fromHex(\"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFFFFFFFFFE\");\r\n    var b = fromHex(\"B4050A850C04B3ABF54132565044B0B7D7BFD8BA270B39432355FFB4\");\r\n    //byte[] S = Hex.decode(\"BD71344799D5C7FCDC45B59FA3B9AB8F6A948BC5\");\r\n    var n = fromHex(\"FFFFFFFFFFFFFFFFFFFFFFFFFFFF16A2E0B8F03E13DD29455C5C2A3D\");\r\n    var h = BigInteger.ONE;\r\n    var curve = new ECCurveFp(p, a, b);\r\n    var G = curve.decodePointHex(\"04\"\r\n                + \"B70E0CBD6BB4BF7F321390B94A03C1D356C21122343280D6115C1D21\"\r\n                + \"BD376388B5F723FB4C22DFE6CD4375A05A07476444D5819985007E34\");\r\n    return new X9ECParameters(curve, G, n, h);\r\n}\r\n\r\nfunction secp256k1() {\r\n    // p = 2^256 - 2^32 - 2^9 - 2^8 - 2^7 - 2^6 - 2^4 - 1\r\n    var p = fromHex(\"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F\");\r\n    var a = BigInteger.ZERO;\r\n    var b = fromHex(\"7\");\r\n    //byte[] S = null;\r\n    var n = fromHex(\"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141\");\r\n    var h = BigInteger.ONE;\r\n    var curve = new ECCurveFp(p, a, b);\r\n    var G = curve.decodePointHex(\"04\"\r\n                + \"79BE667EF9DCBBAC55A06295CE870B07029BFCDB2DCE28D959F2815B16F81798\"\r\n\t            + \"483ADA7726A3C4655DA4FBFC0E1108A8FD17B448A68554199C47D08FFB10D4B8\");\r\n    return new X9ECParameters(curve, G, n, h);\r\n}\r\n\r\nfunction secp256r1() {\r\n    // p = 2^224 (2^32 - 1) + 2^192 + 2^96 - 1\r\n    var p = fromHex(\"FFFFFFFF00000001000000000000000000000000FFFFFFFFFFFFFFFFFFFFFFFF\");\r\n    var a = fromHex(\"FFFFFFFF00000001000000000000000000000000FFFFFFFFFFFFFFFFFFFFFFFC\");\r\n    var b = fromHex(\"5AC635D8AA3A93E7B3EBBD55769886BC651D06B0CC53B0F63BCE3C3E27D2604B\");\r\n    //byte[] S = Hex.decode(\"C49D360886E704936A6678E1139D26B7819F7E90\");\r\n    var n = fromHex(\"FFFFFFFF00000000FFFFFFFFFFFFFFFFBCE6FAADA7179E84F3B9CAC2FC632551\");\r\n    var h = BigInteger.ONE;\r\n    var curve = new ECCurveFp(p, a, b);\r\n    var G = curve.decodePointHex(\"04\"\r\n                + \"6B17D1F2E12C4247F8BCE6E563A440F277037D812DEB33A0F4A13945D898C296\"\r\n\t\t+ \"4FE342E2FE1A7F9B8EE7EB4A7C0F9E162BCE33576B315ECECBB6406837BF51F5\");\r\n    return new X9ECParameters(curve, G, n, h);\r\n}\r\n\r\n// TODO: make this into a proper hashtable\r\nfunction getSECCurveByName(name) {\r\n    if(name == \"secp128r1\") return secp128r1();\r\n    if(name == \"secp160k1\") return secp160k1();\r\n    if(name == \"secp160r1\") return secp160r1();\r\n    if(name == \"secp192k1\") return secp192k1();\r\n    if(name == \"secp192r1\") return secp192r1();\r\n    if(name == \"secp224r1\") return secp224r1();\r\n    if(name == \"secp256k1\") return secp256k1();\r\n    if(name == \"secp256r1\") return secp256r1();\r\n    return null;\r\n}\r\n"],"sourceRoot":"/source/"}